// Generated by view binder compiler. Do not edit!
package com.example.gesallprov.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gesallprov.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySavePhotoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button GalleryPicture;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final Button newPicture;

  @NonNull
  public final ImageView photoImageView;

  @NonNull
  public final Button saveButton;

  private ActivitySavePhotoBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button GalleryPicture, @NonNull ImageView imageView3, @NonNull Button newPicture,
      @NonNull ImageView photoImageView, @NonNull Button saveButton) {
    this.rootView = rootView;
    this.GalleryPicture = GalleryPicture;
    this.imageView3 = imageView3;
    this.newPicture = newPicture;
    this.photoImageView = photoImageView;
    this.saveButton = saveButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySavePhotoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySavePhotoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_save_photo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySavePhotoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.GalleryPicture;
      Button GalleryPicture = ViewBindings.findChildViewById(rootView, id);
      if (GalleryPicture == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.newPicture;
      Button newPicture = ViewBindings.findChildViewById(rootView, id);
      if (newPicture == null) {
        break missingId;
      }

      id = R.id.photoImageView;
      ImageView photoImageView = ViewBindings.findChildViewById(rootView, id);
      if (photoImageView == null) {
        break missingId;
      }

      id = R.id.save_Button;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      return new ActivitySavePhotoBinding((ConstraintLayout) rootView, GalleryPicture, imageView3,
          newPicture, photoImageView, saveButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
