// Generated by view binder compiler. Do not edit!
package com.example.gesallprov.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gesallprov.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button BuyLogin;

  @NonNull
  public final Button MapButton;

  @NonNull
  public final Button Photobutton;

  @NonNull
  public final Button SelLogin;

  @NonNull
  public final ImageView imageView4;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button BuyLogin,
      @NonNull Button MapButton, @NonNull Button Photobutton, @NonNull Button SelLogin,
      @NonNull ImageView imageView4) {
    this.rootView = rootView;
    this.BuyLogin = BuyLogin;
    this.MapButton = MapButton;
    this.Photobutton = Photobutton;
    this.SelLogin = SelLogin;
    this.imageView4 = imageView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BuyLogin;
      Button BuyLogin = ViewBindings.findChildViewById(rootView, id);
      if (BuyLogin == null) {
        break missingId;
      }

      id = R.id.MapButton;
      Button MapButton = ViewBindings.findChildViewById(rootView, id);
      if (MapButton == null) {
        break missingId;
      }

      id = R.id.Photobutton;
      Button Photobutton = ViewBindings.findChildViewById(rootView, id);
      if (Photobutton == null) {
        break missingId;
      }

      id = R.id.SelLogin;
      Button SelLogin = ViewBindings.findChildViewById(rootView, id);
      if (SelLogin == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, BuyLogin, MapButton, Photobutton,
          SelLogin, imageView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
